Como Implantar e Testar
Passo 1: Pré-requisitos
Instale o Terraform: Siga as instruções oficiais.

Configure suas credenciais da AWS: Verifique se seu ambiente (terminal) está configurado com as credenciais da sua conta AWS Academy. Geralmente isso é feito configurando variáveis de ambiente (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN).

Tenha o DNS do seu ALB: Você precisa já ter o EKS e o Application Load Balancer rodando e saber o DNS dele (ex: k8s-meu-alb-12345.us-east-1.elb.amazonaws.com).

Passo 2: Executar o Terraform
Crie um arquivo chamado terraform.tfvars no mesmo diretório dos outros arquivos e adicione o DNS do seu ALB:

Snippet de código

alb_dns_name = "http://SEU-ALB-DNS-AQUI.us-east-1.elb.amazonaws.com"
Atenção: Inclua http:// ou https:// dependendo do listener do seu ALB.

Abra seu terminal no diretório onde salvou os arquivos e execute os seguintes comandos:

Bash

# Inicializa o Terraform e baixa o provedor da AWS
terraform init

# Verifica o que será criado
terraform plan

# Cria os recursos na AWS
terraform apply
Confirme a criação digitando yes quando solicitado. Ao final, o Terraform exibirá os valores definidos no arquivo outputs.tf. Anote esses valores.

Passo 3: Criar um Usuário de Teste no Cognito
Vá até o console da AWS > Amazon Cognito > User Pools.

Selecione o pool que foi criado (ex: eks-app-user-pool).

Vá na aba "Users" e clique em "Create user".

Preencha as informações, desmarque a opção de enviar convite por e-mail e defina uma senha temporária. Marque o e-mail como verificado.

Anote o nome de usuário e a senha.

Passo 4: Obter um Token JWT
Você precisará usar a AWS CLI para obter o token pela primeira vez, pois a senha é temporária.

Execute o comando abaixo, substituindo os valores pelos seus:

Bash

aws cognito-idp admin-initiate-auth \
  --user-pool-id "COLE_O_ID_DO_USER_POOL_AQUI" \
  --client-id "COLE_O_ID_DO_CLIENT_AQUI" \
  --auth-flow ADMIN_USER_PASSWORD_AUTH \
  --auth-parameters USERNAME="seu-usuario",PASSWORD="sua-senha-temporaria" \
  --region "us-east-1"
O Cognito pedirá que você defina uma nova senha. O retorno do comando terá um ChallengeName igual a NEW_PASSWORD_REQUIRED e um Session.

Execute o segundo comando para definir a senha permanente:

Bash

aws cognito-idp admin-respond-to-auth-challenge \
  --user-pool-id "COLE_O_ID_DO_USER_POOL_AQUI" \
  --client-id "COLE_O_ID_DO_CLIENT_AQUI" \
  --challenge-name NEW_PASSWORD_REQUIRED \
  --challenge-responses USERNAME="seu-usuario",NEW_PASSWORD="sua-nova-senha-forte" \
  --session "COLE_O_VALOR_DA_SESSAO_AQUI" \
  --region "us-east-1"
A resposta deste último comando conterá o IdToken. Este é o seu JWT. Copie o valor dele.

Passo 5: Testar a API Gateway
Agora, faça uma chamada para o seu endpoint usando uma ferramenta como o curl.

Teste sem o token (esperado falhar):

Bash

curl -v "URL_DA_SUA_API_GATEWAY/caminho/qualquer"
Você deve receber uma resposta 401 Unauthorized.

Teste com o token (esperado funcionar):

Bash

curl -v "URL_DA_SUA_API_GATEWAY/caminho/qualquer" \
  -H "Authorization: Bearer SEU_ID_TOKEN_JWT_AQUI"
Se tudo estiver correto, você receberá a resposta da sua aplicação que está rodando no EKS.

Com isso, você terá uma solução completa e segura para autenticar usuários e autorizar o acesso à sua aplicação no EKS.